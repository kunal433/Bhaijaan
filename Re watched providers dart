import 'package:flutter/foundation.dart';
import 'package:shared_preferences/shared_preferences.dart';

class RecentlyWatchedProvider with ChangeNotifier {
  Map<String, List<String>> _recentlyWatchedBySite = {};

  Map<String, List<String>> get recentlyWatchedBySite => _recentlyWatchedBySite;

  RecentlyWatchedProvider() {
    loadRecentlyWatched();
  }

  Future<void> loadRecentlyWatched() async {
    final prefs = await SharedPreferences.getInstance();
    final keys = prefs.getKeys();
    for (var key in keys) {
      if (key.startsWith('recentlyWatched_')) {
        final siteId = key.substring('recentlyWatched_'.length);
        final list = prefs.getStringList(key) ?? [];
        _recentlyWatchedBySite[siteId] = list;
      }
    }
    notifyListeners();
  }

  Future<void> addRecentlyWatched(String siteId, String item) async {
    final prefs = await SharedPreferences.getInstance();
    _recentlyWatchedBySite.putIfAbsent(siteId, () => []);
    final list = _recentlyWatchedBySite[siteId]!;

    // Keep max 10 items
    list.remove(item);
    list.insert(0, item);
    if (list.length > 10) {
      list.removeLast();
    }

    await prefs.setStringList('recentlyWatched_$siteId', list);
    notifyListeners();
  }
}
